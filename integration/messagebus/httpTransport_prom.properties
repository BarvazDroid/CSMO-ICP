# Example format of HTTP properties file
# Uncomment the relevant lines and change the settings accordingly
#
# serverPort - the protocol and port that events will be sent to
# serverPort=http:80
# serverPort=https:443
#
  serverPort=http:10085

# clientURL - the URL of a target system to connect to
# clientURL=http(s)://some.host.com:port/some/path
#
# keyStore - the keyStore that contains the private keys for any https ports (see JVM property javax.net.ssl.keyStore)
# keyStore=/the/path/to/the/keystore
#
# keyStorePassword - the password to the keyStore that contains the private keys for any https ports (see JVM property javax.net.ssl.keyStorePassword)
# keyStorePassword=password
#
# trustStore - the trustStore that contains the server's public key for any https clients (see JVM property javax.net.ssl.trustStore)
# trustStore=/the/path/to/the/truststore
#
# trustStorePassword - the password to the trustStore that contains the server's public key for any https clients (see JVM property javax.net.ssl.trustStorePassword)
# trustStorePassword=password
#
# threadPoolSize - the number of threads that the http servers share to process incoming requests
# threadPoolSize = 10
#
# username - the username to use for basic authentication. Leave blank for no authentication
# username = 
#
# password - the password to use in basic authentication. Ignored if username is blank
# password =
#
# expectedMIMEType - The MIME type that server should expect on incoming request payload and therefore handle it in appropriate manner.
#		Value of this property should be one of below:
#		(1)	blank (unset) : Use the MIME type indicated in each incoming request.
#		(2) text/plain : Perform no action and keep the payload as it is as message.
#		(3) application/x-www-form-urlencoded : Perform HTML form decoding on payload, and keep only the first field in form as message.
# expectedMIMEType=
